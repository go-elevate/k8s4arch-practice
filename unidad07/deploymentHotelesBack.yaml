apiVersion: v1
kind: Service
metadata:
    name: pda-hotel-back-stablev1-srv
    namespace: pda-dev
    labels:
        app: pda-dep-back-stablev1
        owner: aws-pda
        type: rest-services
        ejercicio: unidad7
spec:
    type: ClusterIP
    selector:
        app: pda-dep-back-stablev1
        owner: aws-pda
        type: rest-services
        ejercicio: unidad7
    ports:
    - protocol: TCP
      name: http
      port: 5000
      targetPort: 5000
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: pda-hotel-back-stablev1
    namespace: pda-dev
    labels:
        app: pda-dep-back-stablev1
        owner: aws-pda
        type: rest-services
        ejercicio: unidad7
spec:
    replicas: 2
    selector:
        matchLabels:
            app: pda-dep-back-stablev1
            owner: aws-pda
            type: rest-services
            ejercicio: unidad7
    strategy:
            type: RollingUpdate
            rollingUpdate:
                    maxUnavailable: 25%
                    maxSurge: 2
    template:
        metadata:
            name: pda-dep-back-stablev1-pod
            labels:
                app: pda-dep-back-stablev1
                owner: aws-pda
                type: rest-services
                ejercicio: unidad7
        spec:
            initContainers:
            - name: pda-dep-back-stablev1-init
              image: 'ghcr.io/go-elevate/k8s4arch-hotels-backend:stable'
              command: ["python"]
              args: ["migrations.py"]
              envFrom:
              - configMapRef:
                      name:  db-data
              volumeMounts:
              - name: db-volume
                mountPath: /db
            containers:
            - name: pda-dep-back-stablev1-cont
              image: 'ghcr.io/go-elevate/k8s4arch-hotels-backend:stable'
              envFrom:
              - configMapRef:
                      name:  db-data
              resources:
                  requests:
                    cpu: "0.5"
                    memory: "300Mi"
                  limits:
                    cpu: "1.5"
                    memory: "500Mi"
              volumeMounts:
              - name: db-volume
                mountPath: /db
              ports:
              - containerPort: 5000
              livenessProbe:
                  tcpSocket:
                    port: 5000
                  initialDelaySeconds: 2
                  periodSeconds: 2
                  failureThreshold: 1
                  successThreshold: 1
              readinessProbe:
                  httpGet:
                    port: 5000
                    path: /status
                  initialDelaySeconds: 5
                  periodSeconds: 5
                  failureThreshold: 5
                  successThreshold: 2
            volumes:
            - name: db-volume
              emptyDir: {}
